' PlantUML: tool per la generazione di UML (.png) in modo testuale
' supporta diversi diagrammi UML 
' (es. diagramma delle classi, di sequenza...)
' esempio file class_diagram.puml per generare UML a destra
' download (jar): http://plantuml.com/download
' documentazione: http://plantuml.com/class-diagram
' estensione per VS Code (PlantUML): https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml
' (premi ALT-D per aprire la preview in VS Code)

@startuml Observer

' START STYLE
skinparam {
	'monochrome true
	'shadowing false
	'classBackgroundColor white
	'noteBackgroundColor white
	classAttributeIconSize 0
	'linetype polyline
	'linetype ortho
}
hide circle
' END STYLE

title Observer

class Observer <<interface>>{
    + update(): void
}

class AssistenteVocale{
    - storicoComandi: List<ComandoVocale>
    + registra(cv: ComandoVocale): void
    + getUltimoComando(): ComandoVocale
}

class ComandoVocale{
    - trascrizione: String
    + ComandoVocale(trascrizione: String)
    + getTrascrizione(): String
}

class SmartLight{
    - assistente: AssistenteVocale
    - stanza: String
    - accesa: boolean
    + SmartLight(assitente: AssistenteVocale, stanza:String)
    + update(): void
    - elaboraComando(cv: ComandoVocale): void
    - accendi(): void
    - spegni(): void
}

class Subject <<abstract>>{
    - obList: List<Observer>
    + attach(ob: Observer): void
    + detach(ob: Observer): void
    + notifyObservers(): void
}

' definisco le relazioni
AssistenteVocale -up-|> Subject
SmartLight .up.|> Observer
Subject -right-> Observer
SmartLight -left-> AssistenteVocale
AssistenteVocale -down-> ComandoVocale
SmartLight -down-> ComandoVocale

@enduml